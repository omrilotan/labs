/*Message Structure:
    {
        channel: @String
        name: @String
        message: @String
    }
*/

// requirements
var io = require('socket.io');

exports.init = function (connection) {
    var ws = io.listen(connection),
        roomID = 0;

    ws.sockets.on("connection", function (socket) {
        
        socket.emit("service");

        socket.on("newChat", function () {
            socket.emit("chat", { roomID: roomID });
            for (var i = 0; i < 5; i++) {
                (function (roomID, i) {
                    setTimeout(function () {
                        var count = 5 - i;
                        socket.emit("message", {
                            id: roomID,
                            name: "Room " + roomID + " (sys) Countdown:",
                            message: count
                        });
                    }, i * 1000);
                }(roomID, i));
            }
            roomID++;
        });

        socket.on("message", function (data) {
            if (data.message) {
                setTimeout(function () {
                    socket.emit("message", {
                        id: data.id,
                        name: "server",
                        message: "Got it, " + data.name + ". you said: \"" + data.message + "\""
                    });
                }, 300);
            }
        });
    });
};