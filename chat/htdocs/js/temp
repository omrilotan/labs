var activeRooms = [];

            function initiate() {

                window.name = prompt("Login", "");

                //* Fire 'connection'
                window.socket = io.connect('http://localhost:8888');

                socket.on('ready', function () {
                    socket.emit('register', { name: name });
                });

                socket.on('registerSucceeded', function () {
                    document.getElementById("toaster").innerHTML = name +  " You are Now Connected!";
                });

                socket.on('updateOnlineUsers', function (onlineUsers) {
                    var onlineUsersDrop = document.getElementById("onlineUsers");
                    onlineUsersDrop.options.length = 0;
                    
                    onlineUsers.forEach(function (item) {
                        if (item == name)
                            return;
                        var opt = document.createElement("option");
                        opt.text = item;
                        opt.value = item;
                        onlineUsersDrop.appendChild(opt);
                    });
                });

                socket.on('addOnlineUser', function (user) {
                    var onlineUsersDrop = document.getElementById("onlineUsers");
                    var opt = document.createElement("option");
                    opt.text = user;
                    opt.value = user;
                    onlineUsersDrop.appendChild(opt);
                });

                socket.on('removeOnlineUser', function (user) {
                    var onlineUsersSelect = document.getElementById("onlineUsers");
                    for (var i = 0; i < onlineUsersSelect.options.length; i++) {
                        var opt = onlineUsersSelect.options[i];
                        if (opt.value == user) {
                            onlineUsersSelect.remove(i);
                        }
                    }
                });

                socket.on('createRoomSucceeded', function (data) {
                    //* Build HTML form & embed room ID
                    createRoomDOM(data);
               
                    //* Create room listener for each new room
                    (function () {
                        socket.on(data.roomID, function (data) {
                            document.getElementById("textHistoryBox" + data.roomID).value += '\n' + data.senderName + ": " + data.message;
                        });

                    })();
                });
            }

            function createRoomRequest() {
                //* Retreive all participants list
                var partList = [];
                var onlineUsersOptions = document.getElementById("onlineUsers").options;
                for (var i = 0; i < onlineUsersOptions.length; i++) {
                    var opt = onlineUsersOptions[i];
                    if (opt.selected == true) {
                        partList.push(opt.value);
                    }
                }
                partList.push(name);
                socket.emit('createRoom', { participants: partList });
            }

            function createRoomDOM(data) {

                //* Build HTML form & embed room ID
                var labelDiv = document.createElement("div");
                labelDiv.innerHTML = data.roomID + "|" + data.participants.toString();

                var textBox = document.createElement("input");
                textBox.type = "text";
                textBox.id = "textBox" + data.roomID;

                var sendMsgBtn = document.createElement("div");
                sendMsgBtn.onclick = (function (roomID) { return function () { sendMsg(roomID); } })(data.roomID);
                sendMsgBtn.innerHTML = "Send Message";

                var textHistoryBox = document.createElement("textarea");
                textHistoryBox.id = "textHistoryBox" + data.roomID;
                textHistoryBox.cols = 35;
                textHistoryBox.rows = 10;

                var container = document.getElementById("container");
                container.appendChild(labelDiv);
                container.appendChild(textBox);
                container.appendChild(sendMsgBtn);
                container.appendChild(textHistoryBox);
            }

            function sendMsg(roomID) {
                var textBox = document.getElementById("textBox" + roomID);
                var msg = textBox.value;
                textBox.value = "";
                socket.emit("chatMessage", { roomID: roomID, message: msg, senderName: name });
            }