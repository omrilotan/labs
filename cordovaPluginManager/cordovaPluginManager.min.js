/*!
 * cordovaPluginManager version 1.1.2.1
 * 1. add plugins by name, with optional default vars and success & fail handlers
 * 2. call on added plugins with optional vars and success & fail handlers
 * https://github.com/watermelonbunny/cordovaPluginManager
 */
var cordovaPlugin=function(e){var t=this,n=e,r={SCRIPT_NAME:"cordova plugin manager",ERROR_NO_NAME:"can not register a Cordova plugin with no name",ERROR_PRESERVED_WORD:'function name my not be the string "add"',NOT_READY:"device not ready yet"},i=false,s=function(){var e,t;return function(n,r){if(t===undefined){t=console!==undefined&&console.log!==undefined;e=t?console.log:alert}if(t||r){e(n)}return false}}(),o=function(e){return typeof e==="function"?e:function(){}},u=function(e){if(typeof e!=="string"){throw new TypeError(r.SCRIPT_NAME+": "+r.ERROR_NO_NAME)}if(e==="add"){throw new Error(r.SCRIPT_NAME+": "+r.ERROR_PRESERVED_WORD)}return e},a=function(){var e=arguments,t=0,n=e.length,r=[],i=[];for(;t<n;t++){if(typeof e[t]==="function"){r.push(e[t])}else{i.push(e[t])}}return{vars:i,success:r[0],fail:r[1]}},f=false;document.addEventListener("deviceready",function(){i=true},false);t.add=function(){var e=u(arguments[0]),l=Array.prototype.slice.call(arguments,1),c=a.apply(null,l);t[e]=function(){if(f===false&&typeof cordova==="object"&&typeof cordova.exec==="function"){f=true}if(i===false||f===false){s(r.SCRIPT_NAME+": "+r.NOT_READY);return false}var t=a.apply(null,arguments),u=(t.vars.length&&t.vars.length!==0?t.vars:false)||c.vars,l=(typeof t.success==="function"?t.success:false)||o(c.success),h=(typeof t.fail==="function"?t.fail:false)||o(c.fail);cordova.exec(l,h,n,e,u)};return true}}